<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DirectxWpf"
        xmlns:DaeSharpWpf="clr-namespace:DaeSharpWpf;assembly=DaeSharpWpf"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:cmd="http://www.galasoft.ch/mvvmlight"
        xmlns:command="http://www.galasoft.ch/mvvmlight"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        x:Class="DirectxWpf.View.MainWindow"
        xmlns:helpers="clr-namespace:DirectxWpf.Helpers"
        xmlns:converters="clr-namespace:DirectxWpf.Helpers.Converter"
        mc:Ignorable="d"
        Title="Smooth Voxel Generator" Height="700" Width="720"
        MinWidth="600" MinHeight="400"
        DataContext="{Binding Source={StaticResource Locator}, Path=MainVM}" Background="White">

    <Window.Resources>
        <converters:FloatToStringConverter x:Key="FloatToString"/>
    </Window.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding OnLoadCommand}" CommandParameter="{Binding ElementName=Canvas}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding OnCloseCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" MaxWidth="225" MinWidth="150"/>
            <ColumnDefinition Width="2.5*"/>
            <ColumnDefinition Width="*" MaxWidth="225" MinWidth="150"/>
        </Grid.ColumnDefinitions>

        <!--Toolbar-->
        <ToolBar Margin="0" VerticalAlignment="Top" Grid.ColumnSpan="3" Height="25">
            <Button Command="{Binding NewCommand}" Content="New"/>
            <Button Command="{Binding LoadCommand}" Content="Load..."/>
            <Button Command="{Binding SaveCommand}" Content="Save..."/>
            <Button Command="{Binding SetSizeCommand}" Content="Resize"/>
        </ToolBar>

        <!--Left-->
        <ScrollViewer Grid.Column="0" Grid.Row="1" Margin="0" FlowDirection="RightToLeft">
            <Grid Grid.Column="0" Grid.Row="1" Margin="0">
                <Label Content="Textures" Margin="10,5,10,0" VerticalAlignment="Top"/>

                <Label Content="3D Noise Textures" Margin="10,30,10,0" VerticalAlignment="Top"/>
                <Button Command="{Binding LoadNoiseMapCommand}" CommandParameter="1" Content="Load Noise Map 1" Margin="10,60,10,0" VerticalAlignment="Top"/>
                <TextBox Height="20" Margin="10,85,10,0" Text="{Binding Settings.NoiseMap1Location, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" TextAlignment="Left" VerticalAlignment="Top" MaxLines="1" IsEnabled="False" IsUndoEnabled="False" IsReadOnly="True"/>
                <Button Command="{Binding LoadNoiseMapCommand}" CommandParameter="2" Content="Load Noise Map 2" Margin="10,110,10,0" VerticalAlignment="Top"/>
                <TextBox Height="20" Margin="10,135,10,0" Text="{Binding Settings.NoiseMap2Location, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" TextAlignment="Left" VerticalAlignment="Top" MaxLines="1" IsEnabled="False" IsUndoEnabled="False" IsReadOnly="True"/>
                <Button Command="{Binding LoadNoiseMapCommand}" CommandParameter="3" Content="Load Noise Map 3" Margin="10,160,10,0" VerticalAlignment="Top"/>
                <TextBox Height="20" Margin="10,185,10,0" Text="{Binding Settings.NoiseMap3Location, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" TextAlignment="Left" VerticalAlignment="Top" MaxLines="1" IsEnabled="False" IsUndoEnabled="False" IsReadOnly="True"/>

                <Label Content="2D Textures" Margin="10,205,10,0" VerticalAlignment="Top"/>
                <CheckBox IsChecked="{Binding Settings.UseTexture, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Content="Use Texture" Margin="10,230,10,0" VerticalAlignment="Top"/>
                <Button Command="{Binding LoadTextureCommand}" Content="Load Texture" Margin="10,250,10,0" VerticalAlignment="Top"/>
                <TextBox Height="20" Margin="10,275,10,0" Text="{Binding Settings.TextureLocation, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" TextAlignment="Left" VerticalAlignment="Top" MaxLines="1" IsEnabled="False" IsUndoEnabled="False" IsReadOnly="True"/>
                <Button Command="{Binding LoadNoiseTextureCommand}" Content="Load Texture Noise" Margin="10,300,10,0" VerticalAlignment="Top"/>
                <TextBox Height="20" Margin="10,325,10,0" Text="{Binding Settings.TextureNoiseLocation, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" TextAlignment="Left" VerticalAlignment="Top" MaxLines="1" IsEnabled="False" IsUndoEnabled="False" IsReadOnly="True"/>

                <CheckBox IsChecked="{Binding Settings.UseNormalMap, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Content="Use Normal Map" Margin="10,350,10,0" VerticalAlignment="Top"/>
                <Button Command="{Binding LoadNormalMapCommand}" Content="Load Normal Map" Margin="10,370,10,0" VerticalAlignment="Top"/>
                <TextBox Height="20" Margin="10,395,10,0" Text="{Binding Settings.NormalMapLocation, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" TextAlignment="Left" VerticalAlignment="Top" MaxLines="1" IsEnabled="False" IsUndoEnabled="False" IsReadOnly="True"/>

                <Label Content="Frequencies" Margin="10,415,10,0" VerticalAlignment="Top"/>
                <Slider FlowDirection="LeftToRight" Value="{Binding Settings.Frequency01, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="45,441,10,0" VerticalAlignment="Top" Minimum="-0.15" Maximum="0.15"/>
                <TextBox Text="{Binding Settings.Frequency01, Mode=TwoWay, StringFormat=\{0:\,0.000\}, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="10,441,0,0" VerticalAlignment="Top" Width="35" FlowDirection="LeftToRight" HorizontalContentAlignment="Right"/>
                <Slider FlowDirection="LeftToRight" Value="{Binding Settings.Frequency02, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="45,464,10,0" VerticalAlignment="Top" Minimum="-0.075" Maximum="0.075"/>
                <TextBox Text="{Binding Settings.Frequency02, Mode=TwoWay, StringFormat=\{0:\,0.000\}, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="10,464,0,0" VerticalAlignment="Top" Width="35" FlowDirection="LeftToRight" HorizontalContentAlignment="Right"/>
                <Slider FlowDirection="LeftToRight" Value="{Binding Settings.Frequency03, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="45,487,10,0" VerticalAlignment="Top" Minimum="-0.075" Maximum="0.075"/>
                <TextBox Text="{Binding Settings.Frequency03, Mode=TwoWay, StringFormat=\{0:\,0.000\}, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="10,487,0,0" VerticalAlignment="Top" Width="35" FlowDirection="LeftToRight" HorizontalContentAlignment="Right"/>

                <Label Content="Amplitudes" Margin="10,505,10,0" VerticalAlignment="Top"/>
                <Slider FlowDirection="LeftToRight" Value="{Binding Settings.Amplitude01, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="45,531,10,0" VerticalAlignment="Top" Minimum="-75" Maximum="75"/>
                <TextBox Text="{Binding Settings.Amplitude01, Mode=TwoWay, StringFormat=\{0:\,0.00\}, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="10,531,0,0" VerticalAlignment="Top" Width="35" FlowDirection="LeftToRight" HorizontalContentAlignment="Right"/>
                <Slider FlowDirection="LeftToRight" Value="{Binding Settings.Amplitude02, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="45,554,10,0" VerticalAlignment="Top" Minimum="-75" Maximum="75"/>
                <TextBox Text="{Binding Settings.Amplitude02, Mode=TwoWay, StringFormat=\{0:\,0.00\}, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="10,554,0,0" VerticalAlignment="Top" Width="35" FlowDirection="LeftToRight" HorizontalContentAlignment="Right"/>
                <Slider FlowDirection="LeftToRight" Value="{Binding Settings.Amplitude03, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="45,577,10,0" VerticalAlignment="Top" Minimum="-75" Maximum="75"/>
                <TextBox Text="{Binding Settings.Amplitude03, Mode=TwoWay, StringFormat=\{0:\,0.00\}, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="10,577,0,0" VerticalAlignment="Top" Width="35" FlowDirection="LeftToRight" HorizontalContentAlignment="Right"/>
            </Grid>
        </ScrollViewer>
        <GridSplitter Margin="0,20,0,0" HorizontalAlignment="Right" Width="5" ResizeDirection="Columns" Grid.RowSpan="2" Grid.Column="0" Grid.Row="0"/>

        <!--Middle-->
        <Grid Grid.Column="1" Grid.Row="1" Margin="0">
            <DaeSharpWpf:DX10RenderCanvas x:Name="Canvas" Margin="5" Stretch="Fill" Focusable="True">
            </DaeSharpWpf:DX10RenderCanvas>

            <Button Command="{Binding RotationCommand}" CommandParameter="1" Content="[--" Margin="10,0,0,10" Height="20" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="25"/>
            <Button Command="{Binding RotationCommand}" CommandParameter="0" Content="| |" Margin="40,0,0,10" Height="20" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="25"/>
            <Button Command="{Binding RotationCommand}" CommandParameter="-1" Content="--]" Margin="70,0,0,10" Height="20" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="25"/>
        </Grid>

        <!--Right-->
        <ScrollViewer Grid.Column="2" Grid.Row="1" Margin="0" FlowDirection="LeftToRight">
            <Grid Grid.Column="2" Grid.Row="1" Margin="0">

                <Label Content="CellSize" Margin="10,5,10,0" VerticalAlignment="Top"/>
                <Slider Value="{Binding Settings.CellSize, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Margin="45,27,10,0" VerticalAlignment="Top" Minimum="0.001" SmallChange="0" Maximum="25"/>
                <TextBox Text="{Binding Settings.CellSize, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, StringFormat=\{0:\,0.000\}}" HorizontalAlignment="Left" Margin="10,27,0,0" VerticalAlignment="Top" Width="35"/>

                <Label Content="Color" Margin="10,45,10,0" VerticalAlignment="Top"/>
                <xctk:ColorPicker x:Name="ColorPicker" Margin="10,70,73,0" Height="25" VerticalAlignment="Top"/>
                <Button Command="{Binding SetColorCommand}" CommandParameter="{Binding ElementName=ColorPicker, Path=SelectedColor}" Content="Apply" Margin="0,70,10,0" VerticalAlignment="Top" Height="25" HorizontalAlignment="Right" Width="62"/>

                <Label Content="Normal Divider" Margin="10,95,10,0" VerticalAlignment="Top"/>
                <Slider Value="{Binding Settings.DensityNormalDiv, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="45,117,10,0" VerticalAlignment="Top" Minimum="0.001" SmallChange="0" Maximum="3"/>
                <TextBox Text="{Binding Settings.DensityNormalDiv, Mode=TwoWay, StringFormat=\{0:\,0.000\}, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="10,117,0,0" VerticalAlignment="Top" Width="35"/>

                <Label Content="U Modifier" Margin="10,135,10,0" VerticalAlignment="Top"/>
                <Slider Value="{Binding Settings.ModU, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="45,157,10,0" VerticalAlignment="Top" Minimum="-5" Maximum="5"/>
                <TextBox Text="{Binding Settings.ModU, Mode=TwoWay, StringFormat=\{0:\,0.000\}, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="10,157,0,0" VerticalAlignment="Top" Width="35"/>

                <Label Content="V Modifier" Margin="10,175,10,0" VerticalAlignment="Top"/>
                <Slider Value="{Binding Settings.ModV, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="45,197,10,0" VerticalAlignment="Top" Minimum="-5" Maximum="5"/>
                <TextBox Text="{Binding Settings.ModV, Mode=TwoWay, StringFormat=\{0:\,0.000\}, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="10,197,0,0" VerticalAlignment="Top" Width="35"/>

                <Label Content="U Offset" Margin="10,215,10,0" VerticalAlignment="Top"/>
                <Slider Value="{Binding Settings.ModUOffset, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="45,237,10,0" VerticalAlignment="Top" Minimum="-10"/>
                <TextBox Text="{Binding Settings.ModUOffset, Mode=TwoWay, StringFormat=\{0:\,0.000\}, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="10,237,0,0" VerticalAlignment="Top" Width="35"/>

                <CheckBox IsChecked="{Binding Settings.Clamp, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Content="Clamp" Margin="10,260,10,0" VerticalAlignment="Top"/>
                <CheckBox IsChecked="{Binding Settings.UseSpecular, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Content="Use Specular" Margin="10,280,10,0" VerticalAlignment="Top"/>

                <Label Content="Shininess" Margin="10,295,10,0" VerticalAlignment="Top"/>
                <Slider Value="{Binding Settings.Shininess, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="45,317,10,0" VerticalAlignment="Top" Minimum="-5" Maximum="75"/>
                <TextBox Text="{Binding Settings.Shininess, Mode=TwoWay, StringFormat=\{0:\,0.00\}, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="10,317,0,0" VerticalAlignment="Top" Width="35"/>

                <Label Content="Color Specular" Margin="10,335,10,0" VerticalAlignment="Top"/>
                <xctk:ColorPicker x:Name="ColorPickerSpecular" Margin="10,360,73,0" Height="25" VerticalAlignment="Top"/>
                <Button Command="{Binding SetSpecularColorCommand}" CommandParameter="{Binding SelectedColor, ElementName=ColorPickerSpecular}" Content="Apply" Margin="0,360,10,0" VerticalAlignment="Top" Height="25" HorizontalAlignment="Right" Width="62"/>

                <Label Content="Ambient Intensity" Margin="10,385,10,0" VerticalAlignment="Top"/>
                <Slider Value="{Binding Settings.AmbientIntensity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="45,407,10,0" VerticalAlignment="Top" Minimum="-2" Maximum="2"/>
                <TextBox Text="{Binding Settings.AmbientIntensity, Mode=TwoWay, StringFormat=\{0:\,0.000\}, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="10,407,0,0" VerticalAlignment="Top" Width="35"/>

                <Label Content="Color Ambient" Margin="10,425,10,0" VerticalAlignment="Top"/>
                <xctk:ColorPicker x:Name="ColorPickerAmbient" Margin="10,450,73,0" Height="25" VerticalAlignment="Top"/>
                <Button Command="{Binding SetAmbientColorCommand}" CommandParameter="{Binding SelectedColor, ElementName=ColorPickerAmbient}" Content="Apply" Margin="0,450,10,0" VerticalAlignment="Top" Height="25" HorizontalAlignment="Right" Width="62"/>

                <Label Content="Ground Level" Margin="10,480,10,0" VerticalAlignment="Top"/>
                <Slider Value="{Binding Settings.GroundLevel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="45,502,10,0" VerticalAlignment="Top" Minimum="-100" Maximum="100"/>
                <TextBox Text="{Binding Settings.GroundLevel, Mode=TwoWay, StringFormat=\{0:\,0.00\}, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="10,502,0,0" VerticalAlignment="Top" Width="35"/>

                <CheckBox IsChecked="{Binding Settings.Spherical, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Content="Spherical" Margin="10,525,10,0" VerticalAlignment="Top"/>
                <Slider Value="{Binding Settings.Sphere, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="45,540,10,0" VerticalAlignment="Top" Minimum="-25" Maximum="25"/>
                <TextBox Text="{Binding Settings.Sphere, Mode=TwoWay, StringFormat=\{0:\,0.00\}, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="10,540,0,0" VerticalAlignment="Top" Width="35"/>

                <Label Content="Light Direction" Margin="10,558,10,0" VerticalAlignment="Top"/>
                <TextBox Text="{Binding Settings.LightDirectionX, Mode=TwoWay, StringFormat=\{0:\,0.00\}, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="10,584,0,0" VerticalAlignment="Top" Width="35"/>
                <TextBox Text="{Binding Settings.LightDirectionY, Mode=TwoWay, StringFormat=\{0:\,0.00\}, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="53,584,0,0" VerticalAlignment="Top" Width="35"/>
                <TextBox Text="{Binding Settings.LightDirectionZ, Mode=TwoWay, StringFormat=\{0:\,0.00\}, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="96,584,0,0" VerticalAlignment="Top" Width="35"/>
            </Grid>
        </ScrollViewer>
        <GridSplitter Margin="0,20,0,0" HorizontalAlignment="Left" Width="5" ResizeDirection="Columns" Grid.RowSpan="2" Grid.Column="2" Grid.Row="0"/>

        <StatusBar Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="3" Margin="0" FlowDirection="RightToLeft">
            <Label Content="{Binding StatusText}" FlowDirection="LeftToRight" HorizontalAlignment="Right" HorizontalContentAlignment="Right" VerticalAlignment="Top" Height="30" FontStyle="Italic" FontSize="10.667"/>
        </StatusBar>
    </Grid>
</Window>
